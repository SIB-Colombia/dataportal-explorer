block filterWindow
	.filterbox
		#top-filterZone
			.title-window.gradient
				h4(id='addSearchFilter') Filtro de búsqueda
			.minimize-maximize-button
				span(class='caret')
		#occurrenceDetail(style="display: none")
			#topOccurrenceDetail
				a.close-icon-filter-help(data-bind="click: disableOccurrencesDetail")
					img(src="/images/icons/close2.png")
			#occurrenceDetailContainer.unselectable
				.contentOccurrenceDetailContainer
					.occurrence(data-bind="foreach: occurrencesDetails")
						h2
							span.scientificname(data-bind="text: canonical")
						dl.previewTaxon
							dt Reino:
							dd
								span.kingdom(data-bind="text: kingdom")
							dt Filo:
							dd
								span.phylum(data-bind="text: phylum")
							dt Clase:
							dd
								span.class(data-bind="text: taxonClass")
							dt Orden:
							dd
								span.order(data-bind="text: order_rank")
							dt Familia:
							dd
								span.family(data-bind="text: family")
							dt Género:
							dd
								span.genus(data-bind="text: genus")
							dt Especie:
							dd
								span.specie(data-bind="text: fullSpecieName")
						p.detail-link
							a.linkDetailOccurrence(target="_blank", data-bind="attr: { href: url }") Ver registro biológico
						dl.preview-data
							dt ID de registro
							dd.occurrenceID(data-bind="text: id")
							dt Publicador
							dd.providerName(data-bind="text: data_provider_name")
							dt Recurso
							dd.resourceName(data-bind="text: data_resource_name")
							dt Código de institución
							dd.catalogNumber(data-bind="text: institution_code")
							dt Código de colección
							dd.catalogNumber(data-bind="text: collection_code")
							dt Número catálogo
							dd.catalogNumber(data-bind="text: catalogue_number_id")
							dt Fecha
							dd.date(data-bind="text: occurrence_date")
							dt País
							dd.country(data-bind="text: iso_country_code")
							dt Departamento
							dd.country(data-bind="text: iso_department_code")
							dt Latitud
							dd.latitude(data-bind="text: latitude")
							dt Longitud
							dd.longitude(data-bind="text: longitude")
							dt Altitud
							dd.altitude(data-bind="text: altitude_metres")
							dt Profundidad
							dd.deep(data-bind="text: depth_centimetres")
		#resumeDetail(style="display: none")
			#topResumeDetail
				a.close-icon-filter-help(data-bind="click: disableResumeDetail")
					img(src="/images/icons/close2.png")
			#resumeInfoDetailContainer.unselectable
				.contentResumeInfoDetailContainer
					.resumeHeader
						h2 Distribución de registros en celda
					.resume(data-bind="foreach: resumesInfo")
						span.headerDistribution(data-bind="visible: canonicals().length > 0") Publicadores:
						span.headerCount(data-bind="visible: canonicals().length > 0") # Registros
						dl.preview-data(data-bind="foreach: providers")
							dt
								ul
									li
										a(target="_blank", data-bind="attr: { href: url }")
											span(data-bind="text: name")
							dd.cuenta(data-bind="text: count")
						span.headerDistribution(data-bind="visible: canonicals().length > 0") Conjuntos de datos:
						span.headerCount(data-bind="visible: canonicals().length > 0") # Registros
						dl.preview-data(data-bind="foreach: resources")
							dt
								ul
									li
										a(target="_blank", data-bind="attr: { href: url }")
											span(data-bind="text: name")
							dd.cuenta(data-bind="text: count")
						span.headerDistribution(data-bind="visible: counties().length > 0") Municipios:
						span.headerCount(data-bind="visible: counties().length > 0") # Registros
						dl.preview-data(data-bind="foreach: counties")
							dt
								ul
									li
										span(data-bind="text: name")
							dd.cuenta(data-bind="text: count")
						span.headerDistribution(data-bind="visible: canonicals().length > 0") Reino:
						span.headerCount(data-bind="visible: canonicals().length > 0") # Registros
						dl.preview-data(data-bind="foreach: kingdoms")
							dt
								ul
									li
										<!-- ko if: url === null -->
										span(data-bind="text: name")
										<!-- /ko -->
										<!-- ko if: url !== null -->
										a(target="_blank", data-bind="attr: { href: url }")
											span(data-bind="text: name")
										<!-- /ko -->
							dd.cuenta(data-bind="text: count")
						span.headerDistribution(data-bind="visible: canonicals().length > 0") Filo:
						span.headerCount(data-bind="visible: canonicals().length > 0") # Registros
						dl.preview-data(data-bind="foreach: phylums")
							dt
								ul
									li
										<!-- ko if: url === null -->
										span(data-bind="text: name")
										<!-- /ko -->
										<!-- ko if: url !== null -->
										a(target="_blank", data-bind="attr: { href: url }")
											span(data-bind="text: name")
										<!-- /ko -->
							dd.cuenta(data-bind="text: count")
						span.headerDistribution(data-bind="visible: canonicals().length > 0") Clase:
						span.headerCount(data-bind="visible: canonicals().length > 0") # Registros
						dl.preview-data(data-bind="foreach: taxonClasses")
							dt
								ul
									li
										<!-- ko if: url === null -->
										span(data-bind="text: name")
										<!-- /ko -->
										<!-- ko if: url !== null -->
										a(target="_blank", data-bind="attr: { href: url }")
											span(data-bind="text: name")
										<!-- /ko -->
							dd.cuenta(data-bind="text: count")
						span.headerDistribution(data-bind="visible: canonicals().length > 0") Orden:
						span.headerCount(data-bind="visible: canonicals().length > 0") # Registros
						dl.preview-data(data-bind="foreach: order_ranks")
							dt
								ul
									li
										<!-- ko if: url === null -->
										span(data-bind="text: name")
										<!-- /ko -->
										<!-- ko if: url !== null -->
										a(target="_blank", data-bind="attr: { href: url }")
											span(data-bind="text: name")
										<!-- /ko -->
							dd.cuenta(data-bind="text: count")
						span.headerDistribution(data-bind="visible: canonicals().length > 0") Familia:
						span.headerCount(data-bind="visible: canonicals().length > 0") # Registros
						dl.preview-data(data-bind="foreach: families")
							dt
								ul
									li
										<!-- ko if: url === null -->
										span(data-bind="text: name")
										<!-- /ko -->
										<!-- ko if: url !== null -->
										a(target="_blank", data-bind="attr: { href: url }")
											span(data-bind="text: name")
										<!-- /ko -->
							dd.cuenta(data-bind="text: count")
						span.headerDistribution(data-bind="visible: canonicals().length > 0") Género:
						span.headerCount(data-bind="visible: canonicals().length > 0") # Registros
						dl.preview-data(data-bind="foreach: genuses")
							dt
								ul
									li
										<!-- ko if: url === null -->
										span(data-bind="text: name")
										<!-- /ko -->
										<!-- ko if: url !== null -->
										a(target="_blank", data-bind="attr: { href: url }")
											span(data-bind="text: name")
										<!-- /ko -->
							dd.cuenta(data-bind="text: count")
						span.headerDistribution(data-bind="visible: species().length > 0") Especie:
						span.headerCount(data-bind="visible: species().length > 0") # Registros
						dl.preview-data(data-bind="foreach: species")
							dt
								ul
									li
										<!-- ko if: url === null -->
										span(data-bind="text: name")
										<!-- /ko -->
										<!-- ko if: url !== null -->
										a(target="_blank", data-bind="attr: { href: url }")
											span(data-bind="text: name")
										<!-- /ko -->
							dd.cuenta(data-bind="text: count")
						span.headerDistribution(data-bind="visible: canonicals().length > 0") Nombre científico:
						span.headerCount(data-bind="visible: canonicals().length > 0") # Registros
						dl.preview-data(data-bind="foreach: canonicals")
							dt
								ul
									li
										span(data-bind="text: name")
							dd.cuenta(data-bind="text: count")
		#filtersContainerHelp(data-bind="visible: isObjectNameHelpSelected", style="display: none")
			#topFiltersContainerHelp
				a.close-icon-filter-help(data-bind="click: disableFilterHelp")
					img(src="/images/icons/close2.png")
			#contentFiltersContainerHelp.unselectable
				.contentFiltersContainerHelpContainer
					.item-header
						span Top 10 encontrados
						em # Registros
				// Scientific Names resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumeScientificNames, visible: resumeScientificNames().length > 0 && selectedSubject() == 0")
					.item
						span(data-bind="html: canonicalWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='click: function () { $parent.addScientificNameFromHelp($parent, this); }')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				// Kingdom resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumeKingdomNames, visible: resumeKingdomNames().length > 0 && selectedSubject() == 100")
					.item
						span(data-bind="html: kingdomWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='click: function () { $parent.addTaxonNameFromHelp($parent, this); }')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				// Phylum resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumePhylumNames, visible: resumePhylumNames().length > 0 && selectedSubject() == 101")
					.item
						span(data-bind="html: phylumWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='click: function () { $parent.addTaxonNameFromHelp($parent, this); }')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				// Class resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumeClassNames, visible: resumeClassNames().length > 0 && selectedSubject() == 102")
					.item
						span(data-bind="html: nameClassWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='click: function () { $parent.addTaxonNameFromHelp($parent, this); }')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				// Order Rank resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumeOrderNames, visible: resumeOrderNames().length > 0 && selectedSubject() == 103")
					.item
						span(data-bind="html: order_rankWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='click: function () { $parent.addTaxonNameFromHelp($parent, this); }')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				// Family resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumeFamilyNames, visible: resumeFamilyNames().length > 0 && selectedSubject() == 104")
					.item
						span(data-bind="html: familyWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='click: function () { $parent.addTaxonNameFromHelp($parent, this); }')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				// Genus resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumeGenusNames, visible: resumeGenusNames().length > 0 && selectedSubject() == 105")
					.item
						span(data-bind="html: genusWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='click: function () { $parent.addTaxonNameFromHelp($parent, this); }')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				// Species resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumeSpeciesNames, visible: resumeSpeciesNames().length > 0 && selectedSubject() == 106")
					.item
						span(data-bind="html: speciesWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='click: function () { $parent.addTaxonNameFromHelp($parent, this); }')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				// Data providers resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumeDataProviders, visible: resumeDataProviders().length > 0 && selectedSubject() == 25")
					.item
						span(data-bind="html: providerNameWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='click: function () { $parent.addDataProviderNameFromHelp($parent, this); }')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				// Data resources resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumeDataResources, visible: resumeDataResources().length > 0 && selectedSubject() == 24")
					.item
						span(data-bind="html: resourceNameWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='click: function () { $parent.addDataResourceNameFromHelp($parent, this); }')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				// Institution codes resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumeInstitutionCodes, visible: resumeInstitutionCodes().length > 0 && selectedSubject() == 12")
					.item
						span(data-bind="html: institutionCodeWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				// Collection codes resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumeCollectionCodes, visible: resumeCollectionCodes().length > 0 && selectedSubject() == 13")
					.item
						span(data-bind="html: collectionCodeWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				// Countries resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumeCountries, visible: resumeCountries().length > 0 && selectedSubject() == 5")
					.item
						span(data-bind="html: countryNameWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='click: function () { $parent.addCountryIDFromHelp($parent, this); }')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				// Departments resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumeDepartments, visible: resumeDepartments().length > 0 && selectedSubject() == 38")
					.item
						span(data-bind="html: departmentNameWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='click: function () { $parent.addDepartmentIDFromHelp($parent, this); }')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				// Counties resume data
				.contentFiltersContainerHelpContainer(data-bind="foreach: resumeCounties, visible: resumeCounties().length > 0 && selectedSubject() == 39")
					.item
						span(data-bind="html: departmentAndCountyNameWithBold")
						a(href='#', title='Adicionar este filtro', data-bind='click: function () { $parent.addCountyIDFromHelp($parent, this); }')
							img(alt='Adicionar este filtro', src='/images/icons/redplus.png')
						em(data-bind="text: occurrences")
				.resumeHeader
					h2 Distribución de registros encontrados
				.resume(data-bind="foreach: resumesInfoFilter")
					span.headerDistribution(data-bind="visible: providers().length > 0") Publicadores:
					span.headerCount(data-bind="visible: providers().length > 0") # Registros
					dl.preview-data(data-bind="foreach: providers")
						dt
							ul
								li
									a(target="_blank", data-bind="attr: { href: url }")
										span(data-bind="text: name")
						dd.cuenta(data-bind="text: count")
					span.headerDistribution(data-bind="visible: resources().length > 0") Conjuntos de datos:
					span.headerCount(data-bind="visible: resources().length > 0") # Registros
					dl.preview-data(data-bind="foreach: resources")
						dt
							ul
								li
									a(target="_blank", data-bind="attr: { href: url }")
										span(data-bind="text: name")
						dd.cuenta(data-bind="text: count")
					span.headerDistribution(data-bind="visible: countries().length > 0") País:
					span.headerCount(data-bind="visible: countries().length > 0") # Registros
					dl.preview-data(data-bind="foreach: countries")
						dt
							ul
								li
									a(target="_blank", data-bind="attr: { href: url }")
										span(data-bind="text: name")
						dd.cuenta(data-bind="text: count")
					span.headerDistribution(data-bind="visible: departments().length > 0") Departamento:
					span.headerCount(data-bind="visible: departments().length > 0") # Registros
					dl.preview-data(data-bind="foreach: departments")
						dt
							ul
								li
									a(target="_blank", data-bind="attr: { href: url }")
										span(data-bind="text: name")
						dd.cuenta(data-bind="text: count")
					span.headerDistribution(data-bind="visible: counties().length > 0") Municipio:
					span.headerCount(data-bind="visible: counties().length > 0") # Registros
					dl.preview-data(data-bind="foreach: counties")
						dt
							ul
								li
									span(data-bind="text: name")
						dd.cuenta(data-bind="text: count")
					span.headerDistribution(data-bind="visible: kingdoms().length > 0") Reino:
					span.headerCount(data-bind="visible: kingdoms().length > 0") # Registros
					dl.preview-data(data-bind="foreach: kingdoms")
						dt
							ul
								li
									<!-- ko if: url === null -->
									span(data-bind="text: name")
									<!-- /ko -->
									<!-- ko if: url !== null -->
									a(target="_blank", data-bind="attr: { href: url }")
										span(data-bind="text: name")
									<!-- /ko -->
						dd.cuenta(data-bind="text: count")
					span.headerDistribution(data-bind="visible: phylums().length > 0") Filo:
					span.headerCount(data-bind="visible: phylums().length > 0") # Registros
					dl.preview-data(data-bind="foreach: phylums")
						dt
							ul
								li
									<!-- ko if: url === null -->
									span(data-bind="text: name")
									<!-- /ko -->
									<!-- ko if: url !== null -->
									a(target="_blank", data-bind="attr: { href: url }")
										span(data-bind="text: name")
									<!-- /ko -->
						dd.cuenta(data-bind="text: count")
					span.headerDistribution(data-bind="visible: taxonClasses().length > 0") Clase:
					span.headerCount(data-bind="visible: taxonClasses().length > 0") # Registros
					dl.preview-data(data-bind="foreach: taxonClasses")
						dt
							ul
								li
									<!-- ko if: url === null -->
									span(data-bind="text: name")
									<!-- /ko -->
									<!-- ko if: url !== null -->
									a(target="_blank", data-bind="attr: { href: url }")
										span(data-bind="text: name")
									<!-- /ko -->
						dd.cuenta(data-bind="text: count")
					span.headerDistribution(data-bind="visible: order_ranks().length > 0") Orden:
					span.headerCount(data-bind="visible: order_ranks().length > 0") # Registros
					dl.preview-data(data-bind="foreach: order_ranks")
						dt
							ul
								li
									<!-- ko if: url === null -->
									span(data-bind="text: name")
									<!-- /ko -->
									<!-- ko if: url !== null -->
									a(target="_blank", data-bind="attr: { href: url }")
										span(data-bind="text: name")
									<!-- /ko -->
						dd.cuenta(data-bind="text: count")
					span.headerDistribution(data-bind="visible: families().length > 0") Familia:
					span.headerCount(data-bind="visible: families().length > 0") # Registros
					dl.preview-data(data-bind="foreach: families")
						dt
							ul
								li
									<!-- ko if: url === null -->
									span(data-bind="text: name")
									<!-- /ko -->
									<!-- ko if: url !== null -->
									a(target="_blank", data-bind="attr: { href: url }")
										span(data-bind="text: name")
									<!-- /ko -->
						dd.cuenta(data-bind="text: count")
					span.headerDistribution(data-bind="visible: genuses().length > 0") Género:
					span.headerCount(data-bind="visible: genuses().length > 0") # Registros
					dl.preview-data(data-bind="foreach: genuses")
						dt
							ul
								li
									<!-- ko if: url === null -->
									span(data-bind="text: name")
									<!-- /ko -->
									<!-- ko if: url !== null -->
									a(target="_blank", data-bind="attr: { href: url }")
										span(data-bind="text: name")
									<!-- /ko -->
						dd.cuenta(data-bind="text: count")
					span.headerDistribution(data-bind="visible: species().length > 0") Especie:
					span.headerCount(data-bind="visible: species().length > 0") # Registros
					dl.preview-data(data-bind="foreach: species")
						dt
							ul
								li
									<!-- ko if: url === null -->
									span(data-bind="text: name")
									<!-- /ko -->
									<!-- ko if: url !== null -->
									a(target="_blank", data-bind="attr: { href: url }")
										span(data-bind="text: name")
									<!-- /ko -->
						dd.cuenta(data-bind="text: count")
					span.headerDistribution(data-bind="visible: canonicals().length > 0") Nombre científico:
					span.headerCount(data-bind="visible: canonicals().length > 0") # Registros
					dl.preview-data(data-bind="foreach: canonicals")
						dt
							ul
								li
									span(data-bind="text: name")
						dd.cuenta(data-bind="text: count")
		#filtersContainer
			#explorerFiltersAndEditor
				#filterEditorPane
					#filters
						.filter
							span(id='subject', class='type')
								select(name='c[0].s', id='newFilterSubject', data-bind="value: selectedSubject, event: {change: changeFilterHelp}")
									optgroup(label='Taxonomía')
										option(value='0', selected='true') Nombre Científico
										option(value='100') Reino
										option(value='101') Filo
										option(value='102') Clase
										option(value='103') Orden
										option(value='104') Familia
										option(value='105') Género
										option(value='106') Especie
									optgroup(label='Geoespacial')
										option(value='5') País
										option(value='38') Departamento
										option(value='39') Municipio
										option(value='1') Latitud
										option(value='2') Longitud
										option(value='34') Altitud
										option(value='35') Profundidad
										option(value='28') Estado de las coordenadas
									optgroup(label='Recursos de datos')
										option(value='25') Publicador de datos
										option(value='24') Recurso de datos
									optgroup(label='Otros Detalles')
										option(value='4') Fecha de la cita
										option(value='33') Rango de años
										option(value='21') Año
										option(value='22') Mes
										option(value='12') Código de la institución
										option(value='13') Código de la colección
										option(value='14') Número de catálogo
							span(id='predicate', class='predicate')
								select(name='c[0].p', id='newFilterPredicate', data-bind="options: predicateOptions, optionsText: 'name', optionsValue: 'value', value: selectedPredicate")
							span(id='newFilterValue', class='value')
								// Input for simple text
								input(name='c[0].o', type='text', id='statesInput', class='input-medium search-query', autocomplete='off', data-bind="click: enableFilterHelp, value: objectNameValue, valueUpdate: 'afterkeydown', visible: selectedSubject() == 0 || selectedSubject() == 100 || selectedSubject() == 101 || selectedSubject() == 102 || selectedSubject() == 103 || selectedSubject() == 104 || selectedSubject() == 105 || selectedSubject() == 106 || selectedSubject() == 1 || selectedSubject() == 2 || selectedSubject() == 34 || selectedSubject() == 35 || selectedSubject() == 24 || selectedSubject() == 25 || selectedSubject() == 21 || selectedSubject() == 12 || selectedSubject() == 13 || selectedSubject() == 14", style="display: none")
								// Input for country
								select(name='c[0].o', id='dropDownCountry', data-bind='visible: selectedSubject() == 5, value: selectedCountry, selectCountry: {}',  style='display: none')
									option(value='AF') Afganistán
									option(value="AX") Islas de Åland
									option(value="AL") Albania
									option(value="DZ") Algeria
									option(value="AS") Samoa Americana
									option(value="AD") Andorra
									option(value="AO") Angola
									option(value="AI") Anguila
									option(value="AQ") Antártida
									option(value="AG") Antigua y Barbuda
									option(value="AR") Argentina
									option(value="AM") Armenia
									option(value="AW") Aruba
									option(value="AU") Australia
									option(value="AT") Austria
									option(value="AZ") Azerbaiyán
									option(value="BS") Bahamas
									option(value="BH") Bahrein
									option(value="BD") Bangladesh
									option(value="BB") Barbados
									option(value="BY") Belarus
									option(value="BE") Bélgica
									option(value="BZ") Belice
									option(value="BJ") Benin
									option(value="BM") Bermuda
									option(value="BT") Bután
									option(value="BO") Bolivia
									option(value="BA") Bosnia y Herzegovina
									option(value="BW") Botswana
									option(value="BV") Isla Bouvet
									option(value="BR") Brasil
									option(value="IO") Territorio Británico en el Océano Índico
									option(value="BN") Brunei Darussalam
									option(value="BG") Bulgaria
									option(value="BF") Burkina Faso
									option(value="BI") Burundi
									option(value="KH") Camboya
									option(value="CM") Camerún
									option(value="CA") Canadá
									option(value="CV") Cabo Verde
									option(value="KY") Islas Caimán
									option(value="CF") República Centroafricana
									option(value="TD") Chad
									option(value="CL") Chile
									option(value="CN") China
									option(value="TW") China Taipei
									option(value="CX") Isla de Navidad
									option(value="CC") Islas Cocos (Keeling)
									option(value="CO") Colombia
									option(value="KM") Comoras
									option(value="CG") Congo
									option(value="CD") República Democrática del Congo
									option(value="CK") Islas Cook
									option(value="CR") Costa Rica
									option(value="CI") Costa De Marfil
									option(value="HR") Croacia
									option(value="CU") Cuba
									option(value="CW") Curacao
									option(value="CY") Chipre
									option(value="CZ") República Checa
									option(value="DK") Dinamarca
									option(value="DJ") Yibuti
									option(value="DM") Dominica
									option(value="DO") República Dominicana
									option(value="EC") Ecuador
									option(value="EG") Egipto
									option(value="SV") El Salvador
									option(value="GQ") Guinea Ecuatorial
									option(value="ER") Eritrea
									option(value="EE") Estonia
									option(value="ET") Etiopía
									option(value="FK") Islas Malvinas
									option(value="FO") Islas Feroe
									option(value="FJ") Fiji
									option(value="FI") Finlandia
									option(value="FR") Francia
									option(value="GF") Guayana Francesa
									option(value="PF") Polinesia Francesa
									option(value="TF") Territorios Australes Franceses
									option(value="GA") Gabón
									option(value="GM") Gambia
									option(value="GE") Georgia
									option(value="DE") Alemania
									option(value="GH") Ghana
									option(value="GI") Gibraltar
									option(value="GR") Grecia
									option(value="GL") Groenlandia
									option(value="GD") Granada
									option(value="GP") Guadalupe
									option(value="GU") Guam
									option(value="GT") Guatemala
									option(value="GG") Guernsey
									option(value="GN") Guinea
									option(value="GW") Guinea-Bissau
									option(value="GY") Guayana
									option(value="HT") Haití
									option(value="HM") Islas Heard y McDonald
									option(value="VA") Ciudad del Vaticano
									option(value="HN") Honduras
									option(value="HK") Hong Kong
									option(value="HU") Hungría
									option(value="IS") Islandia
									option(value="IN") India
									option(value="ID") Indonesia
									option(value="IR") República Islámica de Irán
									option(value="IQ") Iraq
									option(value="IE") Irlanda
									option(value="IM") Isla de Man
									option(value="IL") Israel
									option(value="IT") Italia
									option(value="JM") Jamaica
									option(value="JP") Japón
									option(value="JE") Jersey
									option(value="JO") Jordania
									option(value="KZ") Kazajistán
									option(value="KE") Kenia
									option(value="KI") Kiribati
									option(value="KP") República Democrática Popular de Corea
									option(value="KR") República de Corea
									option(value="KW") Kuwait
									option(value="KG") Kirguistán
									option(value="LA") República Democrática Popular Lao
									option(value="LV") Letonia
									option(value="LB") Líbano
									option(value="LS") Lesoto
									option(value="LR") Liberia
									option(value="LY") Jamahiriya Árabe Libia
									option(value="LI") Liechtenstein
									option(value="LT") Lituania
									option(value="LU") Luxemburgo
									option(value="MO") Macao
									option(value="MK") Macedonia
									option(value="MG") Madagascar
									option(value="MW") Malawi
									option(value="MY") Malasia
									option(value="MV") Maldivas
									option(value="ML") Mali
									option(value="MT") Malta
									option(value="MH") Islas Marshall
									option(value="MQ") Martinica
									option(value="MR") Mauritania
									option(value="MU") Mauricio
									option(value="YT") Mayotte
									option(value="MX") México
									option(value="FM") Estados Federados de Micronesia
									option(value="MD") República de Moldova
									option(value="MC") Mónaco
									option(value="MN") Mongolia
									option(value="ME") Montenegro
									option(value="MS") Montserrat
									option(value="MA") Marruecos
									option(value="MZ") Mozambique
									option(value="MM") Birmania
									option(value="NA") Namibia
									option(value="NR") Nauru
									option(value="NP") Nepal
									option(value="NL") Holanda
									option(value="AN") Antillas Holandesas
									option(value="NC") Nueva Caledonia
									option(value="NZ") Nueva Zelanda
									option(value="NI") Nicaragua
									option(value="NE") Niger
									option(value="NG") Nigeria
									option(value="NU") Niue
									option(value="NF") Isla Norfolk
									option(value="MP") Islas Marianas del Norte
									option(value="NO") Noruega
									option(value="OM") Omán
									option(value="PK") Pakistán
									option(value="PW") Palau
									option(value="PS") Territorio Palestino Ocupado
									option(value="PA") Panamá
									option(value="PG") Papua Nueva Guinea
									option(value="PY") Paraguay
									option(value="PE") Perú
									option(value="PH") Filipinas
									option(value="PN") Islas Pitcairn
									option(value="PL") Polonia
									option(value="PT") Portugal
									option(value="PR") Puerto Rico
									option(value="QA") Qatar
									option(value="RE") Reunión
									option(value="RO") Rumania
									option(value="RU") Rusia
									option(value="RW") Ruanda
									option(value="BL") Saint Barthelemy
									option(value="SH") Santa Elena
									option(value="KN") San Kitts y Nevis
									option(value="LC") Santa Lucia
									option(value="SX") Saint Martin (Dutch part)
									option(value="MF") Saint Martin (French part)
									option(value="PM") San Pedro y Miguelón
									option(value="VC") San Vicente y las Granadinas
									option(value="WS") Samoa
									option(value="SM") San Marino
									option(value="ST") Santo Tomé y Principe
									option(value="SA") Arabia Saudita
									option(value="SN") Senegal
									option(value="RS") Serbia
									option(value="SC") Seychelles
									option(value="SL") Sierra Leona
									option(value="SG") Singapur
									option(value="SK") Eslovaquia
									option(value="SI") Eslovenia
									option(value="SB") Islas Salomón
									option(value="SO") Somalia
									option(value="ZA") Sudáfrica
									option(value="GS") Islas Georgias del Sur y Sandwich del...
									option(value="SS") South Sudan
									option(value="ES") España
									option(value="LK") Sri Lanka
									option(value="SD") Sudán
									option(value="SR") Surinam
									option(value="SJ") Svalbard y Jan Mayen
									option(value="SZ") Suazilandia
									option(value="SE") Suecia
									option(value="CH") Suiza
									option(value="SY") República Arabe de Siria
									option(value="TJ") Tayikistán
									option(value="TZ") República Unida de Tanzania
									option(value="TH") Tailandia
									option(value="TL") Timor Oriental
									option(value="TG") Togo
									option(value="TK") Tokelau
									option(value="TO") Tonga
									option(value="TT") Trinidad y Tobago
									option(value="TN") Túnez
									option(value="TR") Turquía
									option(value="TM") Turkmenistán
									option(value="TC") Islas Turcas y Caicos
									option(value="TV") Tuvalu
									option(value="UG") Uganda
									option(value="UA") Ucrania
									option(value="AE") Emiratos Arabes Unidos
									option(value="GB") Reino Unido
									option(value="US") Estados Unidos
									option(value="UM") Islas Menores de Estados Unidos
									option(value="UY") Uruguay
									option(value="UZ") Uzbekistán
									option(value="VU") Vanuatu
									option(value="VE") Venezuela
									option(value="VN") Vietnam
									option(value="VG") Islas Vírgenes Británicas
									option(value="VI") Islas Vírgenes de los Estados Unidos
									option(value="WF") Wallis y Futuna
									option(value="EH") Sahara Occidental
									option(value="YE") Yemen
									option(value="ZM") Zambia
									option(value="ZW") Zimbabue
								// Input for department
								select(name="c[0].o", id="dropDownDepartment", data-bind="visible: selectedSubject() == 38, value: selectedDepartment, selectDepartment: {}",  style="display: none")
									option(value="CO-AMA") Amazonas
									option(value="CO-ANT") Antioquia
									option(value="CO-ARA") Arauca
									option(value="CO-ATL") Atlántico
									option(value="CO-BOL") Bolívar
									option(value="CO-BOY") Boyacá
									option(value="CO-CAL") Caldas
									option(value="CO-CAQ") Caquetá
									option(value="CO-CAS") Casanare
									option(value="CO-CAU") Cauca
									option(value="CO-CES") Cesar
									option(value="CO-CHO") Chocó
									option(value="CO-COR") Córdoba
									option(value="CO-CUN") Cundinamarca
									option(value="CO-DC") Bogotá Distrito Capital
									option(value="CO-GUA") Guainía
									option(value="CO-GUV") Guaviare
									option(value="CO-HUI") Huila
									option(value="CO-LAG") La Guajira
									option(value="CO-MAG") Magdalena
									option(value="CO-MET") Meta
									option(value="CO-NAR") Nariño
									option(value="CO-NSA") Norte de Santander
									option(value="CO-PUT") Putumayo
									option(value="CO-QUI") Quindío
									option(value="CO-RIS") Risaralda
									option(value="CO-SAN") Santander
									option(value="CO-SAP") San Andrés, Providencia y Santa Catalina
									option(value="CO-SUC") Sucre
									option(value="CO-TOL") Tolima
									option(value="CO-VAC") Valle del Cauca
									option(value="CO-VAU") Vaupés
									option(value="CO-VID") Vichada
								// Input for county
								select(name="c[0].o", id="dropDownCounty", data-bind="foreach: countyDropdown, visible: selectedSubject() == 39, value: selectedCounty, selectCounty: {}",  style="display: none")
									option(data-bind="attr: { value: isoCountyCode }, text: departmentAndCountyName")
								// Input for coordinates data
								select(name="c[0].o", id="dropDownCoordinateState", data-bind="visible: selectedSubject() == 28, value: selectedCoordinateState",  style="display: none")
									option(value="0") Incluye coordenadas
									option(value="1") No incluye coordenadas
								// Input for date range selector
								.dateSelectors(data-bind="visible: selectedSubject() == 4",  style="display: none")
									#startDate
										strong Día de Inicio:
										br
										select(id="sd_day", name="sd_day", class="daySelect")
											option(value="01") 1
											option(value="02") 2
											option(value="03") 3
											option(value="04") 4
											option(value="05") 5
											option(value="06") 6
											option(value="07") 7
											option(value="08") 8
											option(value="09") 9
											option(value="10") 10
											option(value="11") 11
											option(value="12") 12
											option(value="13") 13
											option(value="14") 14
											option(value="15") 15
											option(value="16") 16
											option(value="17") 17
											option(value="18") 18
											option(value="19") 19
											option(value="20") 20
											option(value="21") 21
											option(value="22") 22
											option(value="23") 23
											option(value="24") 24
											option(value="25") 25
											option(value="26") 26
											option(value="27") 27
											option(value="28") 28
											option(value="29") 29
											option(value="30") 30
											option(value="31") 31
										select(id="sd_month", name="sd_month", class="monthSelect")
											option(value="01") Enero
											option(value="02") Febrero
											option(value="03") Marzo
											option(value="04") Abril
											option(value="05") Mayo
											option(value="06") Junio
											option(value="07") Julio
											option(value="08") Agosto
											option(value="09") Setiembre
											option(value="10") Octubre
											option(value="11") Noviembre
											option(value="12") Diciembre
										input(id="sd_year", name="sd_year", class="yearInput", maxlength="4")
									#endDate
										strong Día de Fin:
										br
										select(id="ed_day", name="ed_day", class="daySelect")
											option(value="01") 1
											option(value="02") 2
											option(value="03") 3
											option(value="04") 4
											option(value="05") 5
											option(value="06") 6
											option(value="07") 7
											option(value="08") 8
											option(value="09") 9
											option(value="10") 10
											option(value="11") 11
											option(value="12") 12
											option(value="13") 13
											option(value="14") 14
											option(value="15") 15
											option(value="16") 16
											option(value="17") 17
											option(value="18") 18
											option(value="19") 19
											option(value="20") 20
											option(value="21") 21
											option(value="22") 22
											option(value="23") 23
											option(value="24") 24
											option(value="25") 25
											option(value="26") 26
											option(value="27") 27
											option(value="28") 28
											option(value="29") 29
											option(value="30") 30
											option(value="31") 31
										select(id="ed_month", name="ed_month", class="monthSelect")
											option(value="01") Enero
											option(value="02") Febrero
											option(value="03") Marzo
											option(value="04") Abril
											option(value="05") Mayo
											option(value="06") Junio
											option(value="07") Julio
											option(value="08") Agosto
											option(value="09") Setiembre
											option(value="10") Octubre
											option(value="11") Noviembre
											option(value="12") Diciembre
										input(id="ed_year", name="ed_year", class="yearInput", maxlength="4")
								// Input for year range selector
								.dateSelectors(data-bind="visible: selectedSubject() == 33",  style="display: none")
									span Empezando desde 
										span(style="font-size: 0.7em") (e incluyendo)
									input(id="startYear", type="text", class="yearInput")
									br
									span hasta 
										span(style="font-size: 0.7em") (e incluyendo)
									input(id="endYear", type="text", class="yearInput")
								// Input for month
								select(name="c[0].o", id="c[0].o", data-bind="visible: selectedSubject() == 22",  style="display: none")
									option(value="1") Enero
									option(value="2") Febrero
									option(value="3") Marzo
									option(value="4") Abril
									option(value="5") Mayo
									option(value="6") Junio
									option(value="7") Julio
									option(value="8") Agosto
									option(value="9") Septiembre
									option(value="10") Octubre
									option(value="11") Noviembre
									option(value="12") Diciembre
							span(class='submitFilter')
								button(class='btn btn-small btn-add-filter', type='button', data-bind='click: addFilterItem') Agregar filtro
					#selectedFilterHelp
						.taxonomyFilterHelp(data-bind="html: helpSearchText")
					#filterWizard
				#constructedFiltersPane
					#constructedFilters
						h4(id='currentSearch') Su búsqueda actual
						p(class='emptySearch', data-bind='visible: totalFilters() == 0') Su búsqueda actual está vacía.
						p(class='emptySearch', data-bind='visible: totalFilters() != 0') Los filtros pueden ser eliminados dando clic en el signo de "resta".
						// Include ScientificName filters
						ul(style="display: none", class='filterItem', data-bind='foreach: selectedScientificNames, visible: selectedScientificNames().length > 0')
							li(class='alteredFilter')
								span(data-bind='visible: $index() == 0') Nombre Científico es 
								span(data-bind='visible: $index() != 0') o es 
								span(data-bind='text: textObject')
								a(href='#', title='Quitar este filtro', data-bind='click: function () { $parent.removeScientificName($parent, this); }')
									img(alt='Quitar este filtro', src='/images/grey_minus.png')
						// Include Taxon filters
						ul(style="display: none", class='filterItem', data-bind='foreach: selectedTaxonNames, visible: selectedTaxonNames().length > 0')
							li(class='alteredFilter')
								span(data-bind='visible: $index() == 0') Clasificación incluye 
								span(data-bind='visible: $index() != 0') o incluye 
								span(data-bind='text: textName + ": "')
								span(data-bind='text: textObject')
								a(href='#', title='Quitar este filtro', data-bind='click: function () { $parent.removeTaxonName($parent, this); }')
									img(alt='Quitar este filtro', src='/images/grey_minus.png')
						// Include Country filters
						ul(style="display: none", class='filterItem', data-bind='foreach: selectedCountriesIDs, visible: selectedCountriesIDs().length > 0')
							li(class='alteredFilter')
								span(data-bind='visible: $index() == 0') País es 
								span(data-bind='visible: $index() != 0') o es 
								span(data-bind='text: textName')
								a(href='#', title='Quitar este filtro', data-bind='click: function () { $parent.removeCountryID($parent, this); }')
									img(alt='Quitar este filtro', src='/images/grey_minus.png')
						// Include Department filters
						ul(style="display: none", class='filterItem', data-bind='foreach: selectedDepartmentsIDs, visible: selectedDepartmentsIDs().length > 0')
							li(class='alteredFilter')
								span(data-bind='visible: $index() == 0') Departamento es 
								span(data-bind='visible: $index() != 0') o es 
								span(data-bind='text: textName')
								a(href='#', title='Quitar este filtro', data-bind='click: function () { $parent.removeDepartmentID($parent, this); }')
									img(alt='Quitar este filtro', src='/images/grey_minus.png')
						// Include counties filters
						ul(style="display: none", class='filterItem', data-bind='foreach: selectedCountiesIDs, visible: selectedCountiesIDs().length > 0')
							li(class='alteredFilter')
								span(data-bind='visible: $index() == 0') Municipio es 
								span(data-bind='visible: $index() != 0') o es 
								span(data-bind='text: textName')
								a(href='#', title='Quitar este filtro', data-bind='click: function () { $parent.removeCountyID($parent, this); }')
									img(alt='Quitar este filtro', src='/images/grey_minus.png')
						// Include Latitude filters
						ul(style="display: none", class='filterItem', data-bind='foreach: selectedLatitudes, visible: selectedLatitudes().length > 0')
							li(class='alteredFilter')
								span(data-bind='visible: $index() == 0') Latitud 
									span(data-bind='visible: predicate == 0') es 
									span(data-bind='visible: predicate == 1') mayor que 
									span(data-bind='visible: predicate == 2') menor que 
								span(data-bind='visible: $index() != 0') y 
									span(data-bind='visible: predicate == 0') es 
									span(data-bind='visible: predicate == 1') mayor que 
									span(data-bind='visible: predicate == 2') menor que 
								span(data-bind='text: $parent.parsedLatitudeText($data)')
								a(href='#', title='Quitar este filtro', data-bind='click: function () { $parent.removeLatitudeNumber($parent, this); }')
									img(alt='Quitar este filtro', src='/images/grey_minus.png')
						// Include longitude filters
						ul(style="display: none", class='filterItem', data-bind='foreach: selectedLongitudes, visible: selectedLongitudes().length > 0')
							li(class='alteredFilter')
								span(data-bind='visible: $index() == 0') Longitud 
									span(data-bind='visible: predicate == 0') es 
									span(data-bind='visible: predicate == 1') mayor que 
									span(data-bind='visible: predicate == 2') menor que 
								span(data-bind='visible: $index() != 0') y 
									span(data-bind='visible: predicate == 0') es 
									span(data-bind='visible: predicate == 1') mayor que 
									span(data-bind='visible: predicate == 2') menor que 
								span(data-bind='text: $parent.parsedLongitudeText($data)')
								a(href='#', title='Quitar este filtro', data-bind='click: function () { $parent.removeLongitudeNumber($parent, this); }')
									img(alt='Quitar este filtro', src='/images/grey_minus.png')
						// Include altitude filters
						ul(style="display: none", class='filterItem', data-bind='foreach: selectedAltitudes, visible: selectedAltitudes().length > 0')
							li(class='alteredFilter')
								span(data-bind='visible: $index() == 0') Altitud 
									span(data-bind='visible: predicate == 0') es 
									span(data-bind='visible: predicate == 1') mayor que 
									span(data-bind='visible: predicate == 2') menor que 
								span(data-bind='visible: $index() != 0') y 
									span(data-bind='visible: predicate == 0') es 
									span(data-bind='visible: predicate == 1') mayor que 
									span(data-bind='visible: predicate == 2') menor que 
								span(data-bind='text: $parent.parsedHeightText($data)')
								a(href='#', title='Quitar este filtro', data-bind='click: function () { $parent.removeAltitudeNumber($parent, this); }')
									img(alt='Quitar este filtro', src='/images/grey_minus.png')
						// Include deep filters
						ul(style="display: none", class='filterItem', data-bind='foreach: selectedDeeps, visible: selectedDeeps().length > 0')
							li(class='alteredFilter')
								span(data-bind='visible: $index() == 0') Profundidad 
									span(data-bind='visible: predicate == 0') es 
									span(data-bind='visible: predicate == 1') mayor que 
									span(data-bind='visible: predicate == 2') menor que 
								span(data-bind='visible: $index() != 0') y 
									span(data-bind='visible: predicate == 0') es 
									span(data-bind='visible: predicate == 1') mayor que 
									span(data-bind='visible: predicate == 2') menor que 
								span(data-bind='text: $parent.parsedHeightText($data)')
								a(href='#', title='Quitar este filtro', data-bind='click: function () { $parent.removeDeepNumber($parent, this); }')
									img(alt='Quitar este filtro', src='/images/grey_minus.png')
						// Include coordinate state filters
						ul(style="display: none", class='filterItem', data-bind='foreach: selectedCoordinate, visible: selectedCoordinate().length > 0')
							li(class='alteredFilter')
								span Estado de las coordenadas es  
								span(data-bind='text: textName')
								a(href='#', title='Quitar este filtro', data-bind='click: function () { $parent.removeCoordinateState($parent, this); }')
									img(alt='Quitar este filtro', src='/images/grey_minus.png')
						// Include data providers filters
						ul(style="display: none", class='filterItem', data-bind='foreach: selectedProviders, visible: selectedProviders().length > 0')
							li(class='alteredFilter')
								span(data-bind='visible: $index() == 0') Publicador de datos es 
								span(data-bind='visible: $index() != 0') o es 
								span(data-bind='text: textObject')
								a(href='#', title='Quitar este filtro', data-bind='click: function () { $parent.removeDataProviderName($parent, this); }')
									img(alt='Quitar este filtro', src='/images/grey_minus.png')
						// Include data resources filters
						ul(style="display: none", class='filterItem', data-bind='foreach: selectedResources, visible: selectedResources().length > 0')
							li(class='alteredFilter')
								span(data-bind='visible: $index() == 0') Recurso de datos es 
								span(data-bind='visible: $index() != 0') o es 
								span(data-bind='text: textObject')
								a(href='#', title='Quitar este filtro', data-bind='click: function () { $parent.removeDataResourceName($parent, this); }')
									img(alt='Quitar este filtro', src='/images/grey_minus.png')
						button(style="display: none", class='btn btn-small btn-add-filter', type='button', data-bind='visible: totalFilters() != 0, click: startSearch') Búsqueda
						button(style="display: none", class='btn btn-small btn-add-filter', type='button', data-bind='visible: isFiltered(), click: removeFilter') Quitar filtro actual
				#densityButtonsPane
					#densityButtons
						span.detailDensity Nivel de detalle de celda:
						button(id='oneDegree', class='btn btn-primary btn-small', type='button', data-toggle="button", data-bind='click: toggleDistribution') 1x1 &deg;
						button(id='pointFiveDegree',class='btn btn-primary btn-small', type='button', data-toggle="button", data-bind='click: toggleDistribution') 0.5x0.5 &deg;
						button(id='pointTwoDegree', class='btn btn-primary btn-small', type='button', data-toggle="button", data-bind='click: toggleDistribution') 0.2x0.2 &deg;
						button(id='pointOneDegree', class='btn btn-primary btn-small', type='button', data-toggle="button", data-bind='click: toggleDistribution') 0.1x0.1 &deg;
				#additionalInfoPane.occult-element
					#downloadResults
						.downloadItem
							a(target="_blank", data-bind="visible: totalGeoOccurrences() != 0, attr: { href: urlDownloadSpreadsheetWithURL }")
								i(class="icon-download-alt icon-white")
								span Descargar resultados con coordenadas.
						.downloadItem
							a(target="_blank", data-bind="attr: { href: urlDownloadSpreadsheet }")
								i(class="icon-download-alt icon-white")
								span Descargar todos los resultados.